[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docbridgeguard"
version = "2.0.0"
description = "Enterprise Compliance-First OCR Pipeline with Bridge Extraction"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Lino Paulino", email = "lino@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Legal",
    "Topic :: Security",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "spacy>=3.6.0",
    "networkx>=3.0",
    "openai>=1.0.0",
    "mistralai>=0.4.0",
    "streamlit>=1.28.0",
    "plotly>=5.0.0",
    "fpdf2>=2.7.0",
    "python-docx>=1.1.0",
    "python-pptx>=0.6.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.5.0",
    "pylint>=2.17.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.0",
]

[project.scripts]
docbridgeguard = "docbridgeguard.cli:main"

[project.urls]
Homepage = "https://github.com/linopaulino/docbridgeguard"
Repository = "https://github.com/linopaulino/docbridgeguard"
Documentation = "https://docbridgeguard.readthedocs.io"

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pylint.main]
extension-pkg-whitelist = ["pydantic"]

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "duplicate-code",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/docbridgeguard --cov-report=html --cov-report=term-missing"